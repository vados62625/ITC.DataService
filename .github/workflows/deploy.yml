name: Deploy to Remote webapi

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      
      # Build and deploy Client and webapi projects
      - name: Build and deploy Docker images
        id: build
        run: |
          # Build Docker images
          docker buildx build --platform linux/amd64 --push -t vados62625/itc-dataservice:latest -f ITC.DataService/Dockerfile .
          docker buildx build --platform linux/amd64 --push -t vados62625/itc-reportservice:latest -f ITC.ReportService/Dockerfile .
#          docker buildx build --platform linux/amd64 --push -t vados62625/itc-frontend:latest -f ITC.Frontend/Dockerfile .

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: "89.108.73.166"

      - name: Adding Known Hosts
        run: ssh-keyscan -p 22 -H 89.108.73.166 >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to remote webapi
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 89.108.73.166
          port: 22
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./docker-compose-server-cd.yml
          target: /home/ITC.DataService/
      
      # Deploy Client Docker image on remote server
      - name: Pull and run Docker images on remote server
        id: deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 22 root@89.108.73.166 '
          docker pull vados62625/itc-dataservice:latest
          docker pull vados62625/itc-reportservice:latest
          docker compose -f /home/ITC.DataService/docker-compose-server-cd.yml down || true &&
          docker compose -f /home/ITC.DataService/docker-compose-server-cd.yml up -d
          '

      - name: Clean up old Docker images on remote server
        id: cleanup
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p 22 root@89.108.73.166 '
          # Remove dangling images (intermediate layers)
          docker image prune -f
          
          # Remove unused images (not used by any containers)
          docker image prune -a -f --filter "until=24h"
          
          # Remove stopped containers older than 24 hours
          docker container prune -f --filter "until=24h"
          
          # Remove unused volumes
          docker volume prune -f
          
          # Remove unused networks
          docker network prune -f
          '


      - name: send telegram message on push
        id: telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Job build-and-deploy completed with status: ${{ job.status }} ${{ steps.build.outcome == 'success' && steps.deploy.outcome == 'success' && '✅' || '⛔️' }}
            Build status: ${{ steps.build.outcome == 'success' && '✅' || '⛔️' }}
            Deploy status: ${{ steps.deploy.outcome == 'success' && '✅' || '⛔️' }}
            Initiated by: ${{ github.actor }}
            Repository: ${{ github.repository }}
            Commit message: ${{ github.event.head_commit.message }}
            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}